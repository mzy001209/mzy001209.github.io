[{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2023-04-15T05:24:37.509Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"c13b616b0ce8e0ee7c288f126cfa3f0c","title":"Linux安装node和npm","content":"linux安装node和npm1.打开linux的命令窗口，切换到&#x2F;usr&#x2F;local&#x2F;目录cd /usr/local/\n\n2.使用wget命令下载node包wget https://npmmirror.com/mirrors/node/v16.14.0/node-v16.14.0-linux-x64.tar.xz\n\n3.下载后解压安装包xz -d node-v16.14.0-linux-x64.tar.xz\n\ntar -vxf node-v16.14.0-linux-x64.tar\n\n4.找到并进入到node-v16.14.0-linux-x64&#x2F;目录下的bin文件夹，查看node版本号cd node-v16.14.0-linux-x64/bin/\n\n./node -v\n\n出现以下即初步完成\n[root@VM-24-4-centos bin]# .&#x2F;node -v\n\nv16.14.0\n\n5.添加软连接，先进入到根目录cd /\n\nln -s /usr/local/node-v16.14.0-linux-x64/bin/node /usr/local/bin/node\n\nln -s /usr/local/node-v16.14.0-linux-x64/bin/npm /usr/local/bin/npm\n\n6.配置完成，查看版本号[root@VM-24-4-centos &#x2F;]# node -v\n\nv16.14.0\n\n[root@VM-24-4-centos &#x2F;]# npm -v\n\n8.3.1\n","slug":"linux安装node和npm","date":"2023-04-15T04:56:46.037Z","categories_index":"Cate","tags_index":"Tag","author_index":"Aurora"},{"id":"a3592a92f3fc2db18bd3b5c924da765a","title":"Mac使用Hexo搭建博客","content":"Mac使用Hexo搭建个人博客准备工作安装Homebrew打开终端，安装Homebrew。如果已经安装过Homebrew可以忽略。\n/usr/bin/ruby -e \"$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install)\"\n\n脚本随时可能失效，本文参考了USTC的镜像，也可以自行去网上找教程。\n安装GitHomebrew安装完成后，安装Git。\nbrew install git\n\n安装Node.jsbrew install node\n\n测试所需组件是否安装成功依次输入下面的命令\nnpm -v\nnode -v\ngit --version\n\n安装成功后应该输出类似以下结果\n░▒▓ ~  npm -v                                                                         ✔  at 12:58:22 ▓▒░\n8.19.2\n\n░▒▓ ~  npm -v                                                                         ✔  at 12:58:40 ▓▒░\n8.19.2\n\n░▒▓ ~  node -v                                                                        ✔  at 13:02:23 ▓▒░\nv18.12.1\n\n░▒▓ ~  git --version                                                                  ✔  at 13:02:32 ▓▒░\ngit version 2.33.0\n\n出现npm、Node.js和git的版本号即代表安装成功。\n配置Hexo环境我们使用npm命令来安装Hexo\nnpm install -g hexo-cli\n\n安装完成后，在~目录下创建一个blog文件夹，在该文件夹下初始化我们的博客\ncd ~ &amp;&amp; mkdir blog &amp;&amp; cd blog\n\n在该文件件目录下执行博客初始化操作\nhexo init\n\n至此，博客已经初始化，依次执行以下两条命令\nhexo g\nhexo s\n\n完成后不要关闭终端，在浏览器内输入地址:\n127.0.0.1:4000\n可以预览博客初始化网站\n配置Git部署网站到GitHub首先你得有一个Github账号，没有的话自己去Github上注册一个，当然如果你有别的静态网站托管服务可以自行研究把你的博客部署上去，本文用到的托管服务是Github Pages，下文提到的用户名均指你的Github用户名。\n配置客户端git 添加SSH Key到github已经配置过的话请跳过此步\n在命令行输入配置用户名和账号的命令\ngit config --global user.name \"username\"\ngit config --global user.email \"example@example.com\"\n\n其中 username 是你的用户名，example@example.com是你github的登录邮箱 然后通过终端命令生成SSH Key\nssh-keygen -t rsa -C \"example@example.com\"\n\n如果已经创建过会出现 Overwrite (y/n)? n提示可以输入 y，没有创建过的话三个回车就好，执行完成后会在~/.ssh/id_rsa.pub目录下生成 需要使用的 key，也就是公钥\n到账户主文件夹下同时按Command+Shift+.显示隐藏文件，找到.ssh文件夹，打开id_rsa.pub，将里面的内容全部复制。\n打开GitHub_Settings_keys 页面，新建New SSH Key，Title随意填，Key就把刚才复制的内容全都粘贴上去。然后点Add SSH Key即可\n然后打开终端在命令行输入ssh git@github.com\nPTY allocation request failed on channel 0\nHi username! You've successfully authenticated, but GitHub does not provide shell access.\nConnection to github.com closed.\n\n出现你的Github用户名代表配置成功。\n在Github上新建网站仓库，将本地博客关联到Github主页在Github上新建一个仓库，Repository Name填你的用户名.github.io（用户名必须跟创建GitHub账号的用户名保持一致），仓库状态设为Public，然后Create Repository创建新的网站仓库。\n打开终端执行命令\ncd blog\nnpm install hexo-deployer-git --save\n\n执行完以后终端窗口先不要关，在Finder(访达)中打开blog文件夹，打开其中的_config.yml文件，翻到底部，修改deploy部分为\ndeploy:\n  type: git\n  repo: https://github.com/你的用户名/你的用户名.github.io.git\n  branch: master\n\n修改完成后按Command + S保存，此时就可以使用hexo d把存在本地的博客deploy到Github上了。\n回到终端，输入\n#生成博客\nhexo g\n#将博客推送到指定的地方，在这里是我们的Github仓库\nhexo d\n\n第一次执行hexo d命令时可能要求你输入你的Github账号和密码，这里如果依照提示按部就班输入你的账户密码会出现如图所示的报错，这是因为Github在2021年8月13日停止了使用账户密码认证的支持，这时需要在Gihub上Developer Settings页面上新建一个Personal Access Token代替密码就可以顺利deploy。\n执行完毕后，访问你的用户名.github.io就能看到你的博客了。\n绑定自定义域名（可选）其实到这一步就可以开始写博客了，不过默认给的github.io域名要是不满意的话还可以绑定你自己的域名\n首先自行申请一个域名，然后登陆到域名申请的后台，添加两条解析记录\n第一条A记录是存放你博客的ip地址，这个可以通过ping你的博客地址得到，第二条CNAME记录是你的博客地址。\n打开存放博客的Github仓库，进入Settings页面在pages选项里的Custom domain里填入你的域名，点击Save，勾选Enforce HTTPS，即\n可通过自定义域名访问你的博客。\n开始写作在终端里执行\n#注意以下命令需要切换到blog文件夹(cd blog)执行\nhexo g\nhexo d\n\n执行后会在blog&#x2F;source&#x2F;_post文件夹里生成一个名为title.md的文件，打开它即可使用Markdown语言开始写作。\n值得一提的是，Hexo生成时真正显示的标题是title.md文件里title项的标题，不必过于计较生成新文章时标题的选择，因为真正的表题在这里修改。\n写作完成后，在终端里执行\n#注意以下命令需要切换到blog文件夹(cd blog)执行hexo ghexo d\n\n即可将文章发布。\nHexo常用命令还可以做些什么事？\n更换主题，Hexo有广泛完善的主题生态，可以自行去网上搜索，本站采用的主题在本站底部\n安装插件，Hexo有广泛完善的插件生态，可以实现很多功能\n\n安装主题步骤 1 - 安装主题包\n\n\n\n\n\n\n\n\n打开终端，进入blog目录，然后运行以下命令安装主题\nnpm install hexo-theme-aurora --save\n\n\n#步骤 2 - 生成主题配置cp -rf ./node_modules/hexo-theme-aurora/_config.yml ./_config.aurora.yml\n\n\n#步骤 3 - 设置permalink\n\n\n\n\n\n\n\n\n因为使用了 Vue-router，Hexo 默认生成的页面和文章的 permalink 与我们 Vue router 中的 path 是不相符的，那么就会出现无法访问的问题。所以我们需要修改 Hexo 默认配置文件里面的 permalink 参数。\n#步骤 3.1打开在 blog目录下的 _config.yml\n#步骤 3.2修改 permalink 参数为 /post/:title.html\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://tridiamond.tech\npermalink: /post/:title.html\npermalink_defaults:\npretty_urls:\n  trailing_index: true # Set to false to remove trailing 'index.html' from permalinks\n  trailing_html: true # Set to false to remove trailing '.html' from permalinks\n\n\n#步骤 4 - 设置代码高亮\n\n\n\n\n\n\n\n\n最后主题是使用 Prismjs 来实现代码高亮显示，但 Hexo 默认是使用 highlightjs，因此你需要更改 Hexo 配置来使用 Prismjs:\n\n把 highlight 的启用改为false\n把 prismjs 的启用改为true\n把 prismjs 下的 preprocess 改为 false\n把  theme 下的landscape改为 aurora\n\nhighlight:\n  enable: false\n  line_number: true\n  auto_detect: false\n  tab_replace: ''\n  wrap: true\n  hljs: false\nprismjs:\n  enable: true\n  preprocess: true\n  line_number: true\n  tab_replace: ''\n\ntheme: aurora\n\n\n#步骤 5 - 页面创建页面使用 Hexo 可以很轻易的创建一个页面，只需要在 source 文件夹中创建一个页面文件夹，然后在里面建立一个 index.md 即可，或者使用 Hexo 的 add 命令。\n比如现在你想添加一个 留言板（Message Board） 页面。你只需要执行这个命令：\nhexo new page message-board\n\n执行后，你会发现 source 文件夹里面会出现一个 message-board 的文件夹。\n.\n└── source\n    └── message-board # 页面生成的文件夹\n        └── index.md # 自动生成的 index.md 文件\n\n如果你看到这个文件夹和文件被生成了，证明你的页面已经生成成功。\n\n#创建 “关于 (about)” 页面主题默认开启了 about 页面，所以我们需要创建这个 about 页，要不主题就无法正常显示 about 页。\n要创建这个默认的 about 页，只需要执行这个 Hexo 的命令：\nhexo create page about\n\n执行完毕后，你会发现在 source/ 文件中多处了一个新的文件夹：\n.\n└── source\n    └── about\n        └── index.md\n\n你可以随意修改这个 index.md markdown 文件中的内容，此文件的内容将会现在在我们的 about 页面中。\n\n#配置菜单要在菜单中显示，你需要在 menu 配置 中添加菜单配置。\n打开在 _config.aurora.yml 的主题的配置文件，然后添加你新生成的页面配置如下：\nmenu:\n  About: true\n  Tags: true\n  Archives: true\n  # 自定义菜单\n  message-board:\n    name: 'MessageBoard'\n    i18n:\n      cn: '留言板'\n      en: 'Message Board'\n    path: '/page/message-board'\n\n\n\n配置中需要配置以下的属性：\n\n\n\n属性\n使用描述\n\n\n\nname\n这个属性就是菜单的名字。（用于标记这个 route，请确保它的唯一性）\n\n\ni18n\ni18n 菜单选项，请查看i18n menu以了解更多使用细节。\n\n\npath\n配置自定义页面，你需要使用这个模版 /page/[页面文件夹名]\n\n\n提示\n如果你需要配置多个页面到一个子菜单里面，那么你可以这么配置。\nmenu:\n  About: true\n  Tags: true\n  Archives: true\n  # 多个自定义页面在子菜单\n  pages-menu:\n    name: 'Top Menu'\n    children:\n      page-1:\n        name: 'Page 1'\n        path: '/page/page-1'\n      page-2:\n        name: 'Page 2'\n        path: '/page/page-2'\n      page-3:\n        name: 'Page 3'\n        path: '/page/page-3'\n\n\n#步骤 6 - 重新生成与本地服务器\n\n\n\n\n\n\n\n\n使用以下命令来运行本地环境。\nhexo clean\nhexo g\nhexo s\n\n推给GitHub\nhexo d\n\n提示\n改变了任何配置都需要重新生成 Hexo 的静态文件！\n当文件都生成完毕之后，就可以访问你的博客了。\n更多Aurora配置\n部署到腾讯云服务器\nhexo g\nscf deploy\n\n","slug":"Mac使用Hexo搭建个人博客","date":"2023-04-15T04:56:46.037Z","categories_index":"Cate","tags_index":"Tag","author_index":"Aurora"},{"id":"11906360c6b26a589b88f287c93bea87","title":"后端学习路线","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\n后端路线：第一部分：Java基础#Javase#mysql#JDBC第二部分：数据结构\n数组\n栈\n队列\n链表\n树\n散列表\n堆\n图\n\n第三部分：web前端\nhtml\n\ncss\n\njs基础\n\njquery\n\n\n第四部分：框架总结\njavaweb（可以根据个人习惯选择视频）  https://www.bilibili.com/video/BV1Y7411K7zz?spm_id_from=333.337.search-card.all.click（尚硅谷的）\n  https://www.bilibili.com/video/BV1Z3411C7NZ/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（动力节点老杜的）\n  https://www.bilibili.com/video/BV1Qf4y1T7Hx/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马的）\n\n书城项目（学完javaweb的练手项目）  https://www.bilibili.com/video/BV1jK411W7yh/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\n自己用javaweb写一个博客项目\nssm  https://www.bilibili.com/video/BV1WZ4y1P7Bp?spm_id_from=333.337.search-card.all.click\n\nssm练手项目  https://www.bilibili.com/video/BV1tZ4y1d7kg/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\nspringboot  https://www.bilibili.com/video/BV19K4y1L7MT/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2 (尚硅谷)\n  https://www.bilibili.com/video/BV15b4y1a7yG/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n  https://www.bilibili.com/video/BV1XQ4y1m7ex/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（动力节点）\n\nspringboot项目（第一个更适合整合，第二个更适合进阶）  https://www.bilibili.com/video/BV13a411q753/?spm_id_from=333.337.search-card.all.click\n  https://www.bilibili.com/video/BV1bf4y1V7Bx/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\n\n第五部分：分布式，微服务，并行架构\nLinux（后端必学）  https://www.bilibili.com/video/BV1Sv411r7vd/?spm_id_from=333.337.search-card.all.click（韩顺平的，讲的很详细）\n  https://www.bilibili.com/video/BV1nW411L7xm/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马的，可以尝试运维）\n如果使用虚拟机，无法联网，可以试试这个  https://blog.csdn.net/sinat_32366329/article/details/103544810\n\nredis  https://www.bilibili.com/video/BV1oW411u75R/?spm_id_from=333.337.search-card.all.click（尚硅谷，讲的比较细）\n  https://www.bilibili.com/video/BV1cr4y1671t/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马，各方面均衡）\n熟练使用redis，可以做这个项目  https://www.bilibili.com/video/BV1cr4y1671t?p=24&amp;vd_source=621637a62188143a3e1e83d34f9035a2（上面黑马视频里面的）\n\ndocker  https://www.bilibili.com/video/BV1gr4y1U7CY/?spm_id_from=333.337.search-card.all.click（尚硅谷）\n  https://www.bilibili.com/video/BV1CJ411T7BK/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n\nNetty  https://www.bilibili.com/video/BV1py4y1E7oA/?spm_id_from=333.337.search-card.all.click（黑马的）\n  https://www.bilibili.com/video/BV1DJ411m7NR/?spm_id_from=333.337.search-card.all.click（尚硅谷的）\n\nDubbo(PRC框架)  https://www.bilibili.com/video/BV1VE411q7dX/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马的）\n  https://www.bilibili.com/video/BV1ns411c7jV/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（尚规格的）\n\nFastDFS(分布式的文件系统，常用于上传照片文件等)  https://www.bilibili.com/video/BV1ta4y1v7Kw/?spm_id_from=333.337.search-card.all.click（动力节点）\n\nSpring家族\nSpringBoot（见上文）\nSpringCloud  https://www.bilibili.com/video/BV18E411x7eT/?spm_id_from=333.337.search-card.all.click（尚硅谷）\n\n\n  https://www.bilibili.com/video/BV1f94y1U7AB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（动力节点）\n  https://www.bilibili.com/video/BV1LQ4y127n4/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n  https://www.bilibili.com/video/BV11A411H775/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（java之父，余胜军）\n\nNacos（阿里巴巴服务器发现，配置，管理）\nSeata（阿里巴巴，分布式事务的中间件）\nSentinel（阿里巴巴，流量控制，熔断，系统负载保护）\nGateWay（网关，限流，日志，监控，鉴权）\nOpenFeign（服务间调用）\n\n\n搜索引擎\nElasticSeqrch（简称es）  https://www.bilibili.com/video/BV1nF411F75k/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\nSolr  https://www.bilibili.com/video/BV1dh411Q7Qu/?spm_id_from=333.337.search-card.all.click（黑马）\n  https://www.bilibili.com/video/BV1gZ4y1a7RH/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（千峰）\n\n\n\n中间件\nMyCat（数据库中间件，分库分表）  https://www.bilibili.com/video/BV1iT41157JX/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（尚硅谷）\n\n\n  https://www.bilibili.com/video/BV1gK4y1b7iU/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（动力节点）\n  https://www.bilibili.com/video/BV17f4y1D7pm/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n\n消息中间件\nActiveMQ  https://www.bilibili.com/video/BV164411G7aB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（尚硅谷）\n  https://www.bilibili.com/video/BV1vJ41177j1/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n\nRabbitMQ  https://www.bilibili.com/video/BV1cb4y1o7zz/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（尚硅谷）\n  https://www.bilibili.com/video/BV15k4y1k7Ep/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（黑马）\n  https://www.bilibili.com/video/BV1dt4y1z7vG/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（java之父，余胜军）\n  https://www.bilibili.com/video/BV1Ap4y1D7tU/?spm_id_from=333.337.search-card.all.click（动力节点）\n\nKafKa  https://www.bilibili.com/video/BV1vr4y1677k/?spm_id_from=333.337.search-card.all.click（尚硅谷）\n  https://www.bilibili.com/video/BV19y4y1b7Uo/?spm_id_from=333.337.search-card.all.click（黑马）\n\n\n\n\n\n日志分析与监控（ELK）\nElasticSearch（搜集，存储数据）\nLogStatsh（分析日志）\nKibana（可视化）\n\n\nZookeepr（一致性服务：比如 配置维护，域名维护，分布式同步）  https://www.bilibili.com/video/BV1to4y1C7gw/?spm_id_from=333.337.search-card.all.click（尚硅谷）\n  https://www.bilibili.com/video/BV1M741137qY/?spm_id_from=333.337.search-card.all.click（黑马）\n\n\n第六部分：DevOps(开发运维一体化)自动化部分管理项目，解决CI&#x2F;CDhttps://www.bilibili.com/video/BV13Q4y1C7hS/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2（尚硅谷）\n\nk8s（让部署容器化的应用简单高效）\n普罗米修斯（prometheus）[系统监控和报警]\nJenkins（监控持续的工作[部署，集成，交付]）\nHarbor（容器的镜像仓库）\nGitLab\n项目工程代码质量检测（sonarqube）\n\n第七部分：大数据技术\nHadoop  https://www.bilibili.com/video/BV1Qp4y1n7EN/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n  https://www.bilibili.com/video/BV1CU4y1N7Sh/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\nHive  https://www.bilibili.com/video/BV1EZ4y1G7iL/?spm_id_from=333.337.search-card.all.click\n  https://www.bilibili.com/video/BV1L5411u7ae/?spm_id_from=333.337.search-card.all.click\n\nImpals  https://www.bilibili.com/video/BV1GA411E7V9/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\nspark  https://www.bilibili.com/video/BV11A411L7CK/?spm_id_from=333.337.search-card.all.click\n  https://www.bilibili.com/video/BV1Jq4y1z7VP/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\nflink  https://www.bilibili.com/video/BV133411s7Sa/?spm_id_from=333.337.search-card.all.click\n  https://www.bilibili.com/video/BV1Gt4y1z7bR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=621637a62188143a3e1e83d34f9035a2\n\n\n第八部分：项目\n电商\n金融\n教育\n直播\nCRM,ERP\n\n第九部分：\n大厂的高配面试题\n\n第十部分：底层源码&#x2F;内核研究编程基础的扩展（科班）\n计算机网络\n操作系统\n编译原理\n离散数学\n数值分析\n计算机组成原理\n汇编语言\n\n","slug":"后端学习路线","date":"2023-04-14T02:26:10.000Z","categories_index":"","tags_index":"","author_index":"Aurora"},{"id":"8be50fffed8f278d900e53b09be407ca","title":"前后端介绍及区别","content":"前端前端是指用户界面和交互逻辑的实现，包括你在浏览网页时接触的所有视觉内容，从字体到颜色以及网页上的特效、布局、图片、视频，音频、下拉菜单和侧边栏等，都是由浏览器解析、处理、渲染后呈现而来，前端的工作内容就是将美工设计的效果图的设计成浏览器可以运行的网页，并配合后端做网页的数据显示和交互等可视方面的工作内容，通常是指Web前端。Web前端通常使用HTML、CSS和JavaScript等技术实现网站的界面和交互效果，构建用户界面、实现用户与系统之间的交互，以及实现网站的视觉效果和交互体验。可以说是Web应用程序的“外表”。\n前端开发用到的技术包括但不限于html5、css3、javascript、Vue等技术。\n后端后端是指用户看不见的东西，通常是与前端工程师进行数据交互及网站数据的保存和读取，相对来说后端涉及到的逻辑代码比前端要多的多，后端考虑的是底层业务逻辑的实现，平台的稳定性与性能等。后端开发是指使用服务器端语言和技术，如Java、PHP、Python等，编写代码来处理前端发送的请求，并从数据库中获取或存储数据，并返回数据或页面。后端开发需要掌握服务器端语言和技术，以及相关的后端框架和库，如Spring、Laravel、Django等。通常使用各种编程语言Java和数据库（如MySQL、Oracle等）实现Web应用程序的业务逻辑和数据存储等方面的功能。\n后端开发 以java为例主要用到的包括但不限于Javase mysql jdbc spring全家桶 Hibernate Http协议 Servlet Tomcat服务器等技术。\n联系比如做一个登陆页面，用户在前端页面上输入了账号密码，然后用鼠标点击了登陆按钮，这时候前端会将账号密码通过请求接口发送给后端做处理，后端收到数据会先检查此账号是否存在，如果不存在，则返回给前端一条类似于这样的信息：“你输入的账号不存在，请重新输入”，用户再次重新输入账号，此时后端查询账户存在，密码也正确，则后端返回登陆成功的信息给前端。现代计算机领域的难题如大规模负载，海量数据处理，实时计算也是后端的，前端集中在表示层。\n区别\n技术栈不同：前端主要使用HTML、CSS和JavaScript等技术，而后端则使用各种编程语言和数据库等技术。\n目标不同：前端主要关注用户界面和交互逻辑的实现，而后端主要关注业务逻辑和数据存储等方面的实现。\n工作职责不同：前端负责网站的视觉效果和用户体验，后端负责网站的业务逻辑和数据存储等方面的功能。\n交互方式不同：前端与用户直接交互，而后端则与数据库等后端服务交互。\n\n总之，前端和后端都是Web应用程序中不可或缺的组成部分，各自拥有不同的技术栈和工作职责，但都为Web应用程序的实现提供了必要的支持。\n前端和后端开发的主要区别在于它们处理的数据和技术。前端开发者主要负责用户界面和交互体验的开发，而后端开发者主要负责数据处理和服务器端代码的开发。具体区别如下：\n数据处理前端开发者不直接处理数据，而是从后端获取数据并将其呈现在用户界面上。后端开发者负责数据处理，从数据库中获取数据，对其进行处理并将其返回给前端。\n技术前端开发者需要掌握HTML、CSS、JavaScript等技术，以及相关的前端框架和库，如React、Vue、jQuery等。后端开发者需要掌握服务器端语言和技术，如Java、PHP、Python等，以及相关的后端框架和库，如Spring、Laravel、Django等。\n工作内容前端开发者主要负责用户界面和交互体验的开发，例如网站的布局、样式和动态效果等。后端开发者主要负责数据处理和服务器端代码的开发，例如编写API接口、连接数据库、进行安全验证等。\n协作前端和后端开发者需要密切协作，以确保前后端数据的正确传递和处理。前端开发者需要清楚地了解后端接口的功能和参数，并根据其开发前端页面。后端开发者需要在开发API接口时考虑前端开发者的需求，以便前端可以正确地使用后端提供的数据。\n总结前端和后端开发都是构建网站的重要组成部分。前端开发者负责用户界面和交互体验的开发，后端开发者负责数据处理和服务器端代码的开发。前后端开发者需要密切协作，以确保数据的正确传递和处理。\n","slug":"前后端介绍以及区别","date":"2023-04-13T08:13:20.000Z","categories_index":"","tags_index":"","author_index":"Aurora"}]